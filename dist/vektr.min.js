!function(allex,module,applib,vektr){"use strict";function VektrCanvas(a,b){WebElement.call(this,a,b),this.scene=null,this.renderer=null}function _onloaded(a,b,c){return c?(a.renderers.push(c),void b.resolve(c)):b.reject(new Error("failed to load svg"))}var lib=allex.lib,WebElement=module.abstractions.WebElement,q=lib.q,CANVAS_SCHEMA={type:"object",properties:{svg:{anyOf:[{type:"object",properties:{horizontal:{type:"string"},vertical:{type:"string"}},additionalProperties:!1,required:["horizontal"]},{type:"string"}]},autoresize:{type:"boolean"},debug:{type:"boolean"},mindOrientation:{type:"boolean"},ctor:{type:"string"}},additionalProperties:!1,required:["debug","autoresize","mindOrientation","svg","ctor"]};lib.inherit(VektrCanvas,WebElement),VektrCanvas.prototype.__cleanUp=function(){WebElement.prototype.__cleanUp.call(this)},VektrCanvas.prototype._load=function(a,b){var c=q.defer();return vektr.load(a,b,_onloaded.bind(null,this,c)),c.promise},VektrCanvas.prototype.doInitialize=function(){WebElement.prototype.doInitialize.call(this),this.scene=new vektr.compositing.Scene(this.get("id"),this.config);var svg=this.getConfigVal("svg"),ctor=eval(this.getConfigVal("ctor")),p;if(!lib.isFunction(ctor))throw new Error("Failed to instantiate SVG, ctor is not a function");return this.renderers=[],p=lib.isString(svg)?this._load(svg,ctor):q.all([this._load(svg.horizontal,ctor),this._load(svg.vertical,ctor)]),p.then(this._runRenderers.bind(this))},VektrCanvas.prototype._runRenderers=function(){return console.log("ABOUT TO RUN RENDERERS ..."),this.renderers.forEach(lib.doMethod.bind(null,"runOn",[this.get("id")])),q.resolve(!0)},VektrCanvas.prototype.CONFIG_SCHEMA=function(){return CANVAS_SCHEMA},VektrCanvas.prototype.DEFAULT_CONFIG=function(){return{debug:!0,autoresize:!0,mindOrientation:!1}},module.elements.VektrCanvas=VektrCanvas,applib.registerElementType("VektrCanvas",VektrCanvas)}(ALLEX,ALLEX.WEB_COMPONENTS.allex_web_webappcomponent,ALLEX.WEB_COMPONENTS.allex_applib,vektr);